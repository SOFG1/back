[tool]
[tool.poetry]
name = "textsenseai"
description = "Backend for a RAG application"
version = "1.0.24"
authors = [
  "Andreas Weiden <andreas.weiden@skillbyte.de>",
  "Christopher Reitemeyer <christopher.reitemeyer@skillbyte.de>",
  "Emre Isik <emre.isik@skillbyte.de>",
  "Karl Reinhold <karl.goering@skillbyte.de>",
  "Kevin Konrad <kevin.konrad@skillbyte.de>",
  "Simon Herbert <simon.herbert@skillbyte.de>",
  "Vladislav Stoyanov <vladislav.stoyanov@skillbyte.de>"
]
readme = "README.md"
repository = "https://gitlab.com/skillbyte/products/textsenseai/tsai-backend"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11,<3.13"
alembic = "^1.13.2"
bcrypt = "^4.1.3"
email-validator = "^2.2.0"
fastapi = "^0.115.0"
gotenberg-client = "^0.6.0"
langchain = "^0.3.0"
langchain-aws = "^0.2.1"
langchain-community = "^0.3.0"
langchain-openai = "^0.2.0"
langchain-weaviate = "^0.0.3"
langfuse = "^2.39.3"
limits = "^3.13.0"
minio = "^7.2.7"
orjson = "^3.10.6"
prometheus-fastapi-instrumentator = "^7.0.0"
psycopg2-binary = "^2.9.9"
pydantic = "^2.8.2"
pydantic-extra-types = "^2.9.0"
pydantic-settings = "^2.3.4"
pyjwt = "^2.8.0"
pymupdf = "^1.24.9"
python-dotenv = "^1.0.0"
python-multipart = "^0.0.12"
rapidocr-onnxruntime = "^1.3.23"
slowapi = "^0.1.9"
SQLAlchemy-Utils = "^0.41.2"
sqlmodel = "^0.0.22"
uuid6 = "^2024.7.10"
uvicorn = {extras = ["standard"], version = "^0.31.0"}
weaviate-client = "^4.6.4"

[tool.poetry.group.evaluation.dependencies]
datasets = "^3.0.0"
gitpython = "^3.1.43"
mlflow = "^2.14.3"
pandas = "^2.2.2"
ragas = "^0.1.10"

[tool.poetry.group.linting.dependencies]
pre-commit = "^4.0.0"
pyright = "^1.1.372"
ruff = "^0.6.0"

[tool.poetry.group.local.dependencies]
langchain-huggingface = "^0.1.0"

[tool.poetry.group.testing.dependencies]
httpx = "^0.27.0"
more-itertools = "^10.5.0"
pytest = "^8.2.2"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "auto"

[tool.pyright]
venv = ".venv"
venvPath = "."

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
ignore = [
  "A001", # builtin-variable-shadowing
  "A002", # builtin-argument-shadowing
  "ANN101", # missing-type-self
  "B008", # function-call-in-default-argument
  "BLE001", # blind-except
  "C", # complexity
  "COM812", # missing-trailing-comma
  "CPY001", # missing-copyright-notice
  "D", # documentation
  "DOC201", # docstring-missing-returns
  "DOC501", # docstring-missing-exception
  "E501", # line-too-long
  "ERA001", # commented-out-code
  "FIX002", # todo
  "ISC001", # single-line-implicit-string-concatenation
  "PLC0415", # import-outside-top-level
  "PLR0912", # too-many-branches
  "PLR0913", # too-many-arguments
  "PLR0915", # too-many-statements
  "PLR1704", # redefined-argument-from-local
  "PLR2004", # magic-value-comparison
  "RUF001", # ambiguous-unicode-character-string
  "RUF029", # unused-async
  "S101", # assert
  "S104", # hardcoded-bind-all-interfaces
  "T201", # print
  "TD" # todo
]
# Pyflakes - F, pycodestyle - E, W
# flake8-builtins - A
# Pylint - PLC, PLE, PLW
# isort - I
# pyupgrade - UP
# select = ['E', 'F', 'W', 'A', 'PLC', 'PLE', 'PLW', 'I', 'UP', 'FAST']
select = ['ALL']

[tool.ruff.lint.per-file-ignores]
"evaluation/*" = ["ALL"]
