x-backend-environment: &backend-environment
  TRANSFORMERS_CACHE: /usr/src/app/.cache
  WEAVIATE_HOST: "weaviate"
  WEAVIATE_GRPC_HOST: "weaviate"
  DB_HOST: postgres
  LANGCHAIN_DB_HOST: postgres
  OLLAMA_URL: "http://host.docker.internal:11434"
  LOCAL_EMBEDDING_DEVICE: cpu
  OBJECT_STORE_ENDPOINT_URL: minio:9000
  EMBEDDING_MODE: openai
  LANGFUSE_HOST: http://langfuse:3000
  LANGFUSE_PUBLIC_KEY: lf_pk_1234567890
  LANGFUSE_SECRET_KEY: lf_sk_1234567890
  UVICORN_ACCESS_LOG: true
  RATE_LIMIT: "100/minute"
  GOTENBERG_URL: "http://gotenberg:3100"
services:
  backend:
    build:
      dockerfile: Dockerfile
      context: .
      args:
        - FINAL_VERSION=remote
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      <<: *backend-environment
    depends_on:
      - weaviate
      - postgres
      - minio
      - langfuse
      - gotenberg
  file-expiration:
    build:
      dockerfile: Dockerfile
      context: .
      args:
        - FINAL_VERSION=remote
    environment:
      <<: *backend-environment
      JOB: file_expiration
    depends_on:
      - backend
  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - "8080"
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.26.3
    ports:
      - "8080:8080"
      - "50051:50051"
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: on-failure
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_APIKEY_ENABLED: "true"
      AUTHENTICATION_APIKEY_USERS: "admin"
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: "skillbyte"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      DEFAULT_VECTORIZER_MODULE: "none"
      ENABLE_MODULES: "text2vec-cohere,text2vec-huggingface,text2vec-palm,text2vec-openai,generative-openai,generative-cohere,generative-palm,ref2vec-centroid,reranker-cohere,qna-openai"
      CLUSTER_HOSTNAME: "node1"
  postgres:
    image: postgres:16
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tsai
  minio:
    image: minio/minio:RELEASE.2024-08-03T04-33-23Z
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: skillbyte
    command:
      - server
      - /data
      - --console-address
      - :9001
  frontend:
    build:
      dockerfile: ../tsai-frontend/Dockerfile
      context: ../tsai-frontend/
      args:
        - VITE_TXAI_BACKEND_URL=http://localhost:8000
    ports:
      - "8888:8080"
  langfuse:
    image: langfuse/langfuse:2.79.0
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "3001:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/langfuse
      NEXTAUTH_SECRET: mysecret
      SALT: mysalt
      ENCRYPTION_KEY: 2a7a29d5ecb62f9c9a5232ef061120933a38ec6a622dcd69c1428bf33d59869c # generate via `openssl rand -hex 32`
      NEXTAUTH_URL: http://localhost:3001
      TELEMETRY_ENABLED: ${TELEMETRY_ENABLED:-true}
      LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: ${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
      LANGFUSE_INIT_ORG_ID: skillbyte
      LANGFUSE_INIT_ORG_NAME: Skillbyte
      LANGFUSE_INIT_PROJECT_ID: tsai
      LANGFUSE_INIT_PROJECT_NAME: TextSenseAI
      LANGFUSE_INIT_PROJECT_PUBLIC_KEY: lf_pk_1234567890
      LANGFUSE_INIT_PROJECT_SECRET_KEY: lf_sk_1234567890
      LANGFUSE_INIT_USER_EMAIL: admin@skillbyte.de
      LANGFUSE_INIT_USER_NAME: admin
      LANGFUSE_INIT_USER_PASSWORD: skillbyte

  gotenberg:
    image: gotenberg/gotenberg:8
    command:
      - "gotenberg"
      - "--api-port=3100"
    ports:
      - "3100:3100"
    healthcheck:
      test: curl --request GET http://localhost:3100/health
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  weaviate_data: {}
  postgres_data: {}
  minio_data: {}
